package UsingArray;

import java.util.Arrays;

/**
 * Created by mia on 24/01/2018.
 * A pseudorandom process is a process that appears to be random but is not. Pseudorandom sequences typically exhibit statistical randomness while being generated by an entirely deterministic causal process. Such a process is easier to produce than a genuinely random one, and has the benefit that it can be used again and again to produce exactly the same numbers, which is useful for testing and fixing software.
 To generate truly random numbers would require precise, accurate, and repeatable system measurements of absolutely non-deterministic processes. Linux uses, for example, various system timings (like user keystrokes, I/O, or least-significant digit voltage measurements) to produce a pool of random numbers.
 */
public class MethodsForArrays {

    public static void main(String[] args) {

        int[] A = {2,5,7,1,3};
        int[] B = {3,1,0,12,4};

        int[] C = {2,5,7,1,3};
        int[] D = {2,5,7,1,3};

        System.out.println(Arrays.equals(A,B));
        System.out.println(Arrays.equals(C,D));

        Arrays.fill(A,10);
        System.out.println(Arrays.toString(A));

        int[] E = Arrays.copyOf(A,10);
        System.out.println(Arrays.toString(E));

        int[] F = Arrays.copyOfRange(A,1,3);
        System.out.println(Arrays.toString(F));

        Arrays.sort(B);
        System.out.println(Arrays.toString(B));

        int[] G = A.clone();
        System.out.println("G:" + Arrays.toString(G));

        int test1[][] = {{1,2,3},{4,5,6}};
        int test2[][] = {{1,2,3},{4,5,6}};

        System.out.println(Arrays.deepEquals(test1,test2));
        System.out.println(Arrays.equals(test1,test2));

        System.out.println(Arrays.deepToString(test1));

    }

}
